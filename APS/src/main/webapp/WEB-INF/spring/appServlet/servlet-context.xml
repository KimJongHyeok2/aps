<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven/>
	<context:annotation-config/>
	<context:property-placeholder location="classpath:db.properties, classpath:email.properties, classpath:social.properties"/>

	<util:properties id="s3Properties" location="classpath:s3.properties"/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- DataSource -->
	<beans:bean name="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<beans:property name="driverClassName" value="${db.driver}"/>
		<beans:property name="url" value="${db.url}"/>
		<beans:property name="username" value="${db.username}"/>
		<beans:property name="password" value="${db.password}"/>
		
		<beans:property name="initialSize" value="50"/>
		<beans:property name="maxTotal" value="50"/>
		<beans:property name="maxIdle" value="50"/>
		<beans:property name="minIdle" value="50"/>
		
		<beans:property name="testOnBorrow" value="false"/>
		<beans:property name="testOnReturn" value="false"/>
	</beans:bean>

	<!-- TransactionManager -->
	<beans:bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
	<tx:annotation-driven/>
	
	<!-- JdbcTemplate -->
	<beans:bean name="template" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
	<!-- SqlSessionFactory -->
	<beans:bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="mapperLocations" value="classpath:com/kjh/aps/mapper/*.xml"/>
	</beans:bean>
	
	<!-- SqlSession -->
	<beans:bean name="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory"/>
	</beans:bean>
	
	<!-- JavaMailSender -->
	<beans:bean name="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host">
			<beans:value>${email.host}</beans:value>
		</beans:property>
		<beans:property name="port">
			<beans:value>${email.port}</beans:value>
		</beans:property>
		<beans:property name="username">
			<beans:value>${email.username}</beans:value>
		</beans:property>
		<beans:property name="password">
			<beans:value>${email.password}</beans:value>
		</beans:property>
		<beans:property name="defaultEncoding">
			<beans:value>${email.defaultEncoding}</beans:value>
		</beans:property>
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.transport.protocol">${email.protocol}</beans:prop>
				<beans:prop key="mail.smtp.auth">${email.auth}</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">${email.enable}</beans:prop>
				<beans:prop key="mail.debug">${email.debug}</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<!-- Interceptor -->
	<beans:bean name="writeInterceptor" class="com.kjh.aps.intercepter.WriteInterceptor"/>
	<beans:bean name="pushInterceptor" class="com.kjh.aps.intercepter.PushInterceptor"/>
	<beans:bean name="recommendInterceptor" class="com.kjh.aps.intercepter.RecommendInterceptor"/>
	<interceptors>
		<interceptor>
			<mapping path="/community/board/writeOk"/>
			<mapping path="/community/board/comment/write"/>
			<mapping path="/community/board/commentReply/write"/>
			<mapping path="/community/reviewReply/write"/>
			<mapping path="/community/combine/writeOk"/>
			<mapping path="/community/combine/comment/write"/>
			<mapping path="/community/combine/commentReply/write"/>
			<mapping path="/customerService/comment/write"/>
			<mapping path="/customerService/commentReply/write"/>
			<beans:ref bean="writeInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/community/board/comment/write"/>
			<mapping path="/community/board/commentReply/write"/>
			<mapping path="/community/reviewReply/write"/>
			<mapping path="/community/combine/comment/write"/>
			<mapping path="/community/combine/commentReply/write"/>
			<mapping path="/customerService/comment/write"/>
			<mapping path="/customerService/commentReply/write"/>
			<beans:ref bean="pushInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/community/board/recommend"/>
			<mapping path="/community/board/comment/recommend"/>
			<mapping path="/community/review/recommend"/>
			<mapping path="/community/combine/recommend"/>
			<mapping path="/community/combine/comment/recommend"/>
			<mapping path="/customerService/comment/recommend"/>
			<beans:ref bean="recommendInterceptor"/>
		</interceptor>
	</interceptors>

	<beans:bean name="boardWritePushHandler" class="com.kjh.aps.util.BoardWritePushHandler"/>
	<beans:bean name="gradePointAverageHandler" class="com.kjh.aps.util.GradePointAverageHandler"/>

	<!-- Web Socket -->
	<websocket:handlers allowed-origins="*">
		<websocket:mapping handler="boardWritePushHandler" path="/BoardWritePush"/>
		<websocket:mapping handler="gradePointAverageHandler" path="/GradePointAverage"/>
		<websocket:sockjs/>
	</websocket:handlers>

	<!-- Naver Login -->
	<beans:bean name="naverLoginBO" class="com.kjh.aps.util.NaverLoginBO">
		<beans:constructor-arg index="0" value="${naver.clientId}"/>
		<beans:constructor-arg index="1" value="${naver.clientSecret}"/>
		<beans:constructor-arg index="2" value="${naver.redirectUrl}"/>
		<beans:constructor-arg index="3" value="${naver.sessionState}"/>
		<beans:constructor-arg index="4" value="${naver.profileApiUrl}"/>
	</beans:bean>

	<!-- Google Login -->
	<beans:bean name="googleOAuth2Template" class="org.springframework.social.google.connect.GoogleOAuth2Template">
		<beans:constructor-arg value="${google.clientId}"/>
		<beans:constructor-arg value="${google.clientSecret}"/>
	</beans:bean>
	
	<beans:bean name="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
		<beans:property name="scope" value="${google.scope}"/>
		<beans:property name="redirectUri" value="${google.redirectUrl}"/>
	</beans:bean>
	
	<beans:bean name="googleLoginBO" class="com.kjh.aps.util.GoogleLoginBO">
		<beans:constructor-arg index="0" ref="googleOAuth2Template"/>
		<beans:constructor-arg index="1" ref="googleOAuth2Parameters"/>
		<beans:constructor-arg index="2" value="${google.clientId}"/>
		<beans:constructor-arg index="3" value="${google.clientSecret}"/>
	</beans:bean>
	
	<beans:bean name="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="3145728"/>
		<beans:property name="maxInMemorySize" value="10000000"/>
	</beans:bean>
	
	<task:annotation-driven/>

	<context:component-scan base-package="com.kjh.aps"/>
	
</beans:beans>